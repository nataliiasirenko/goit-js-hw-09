{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAe,mBAClCE,QAASH,SAASC,cAAe,iBACjCG,UAAWJ,SAASC,cAAe,mBACnCI,OAAQL,SAASC,cAAe,oBAGlCH,EAAKC,QAAQO,iBAAiB,UAAU,SAAAC,GACtCA,EAAEC,iBAEF,IAAMC,EAASC,OAAOZ,EAAKM,UAAUO,OACjCC,EAAQF,OAAOZ,EAAKI,SAASS,OAC3BE,EAAOH,OAAOZ,EAAKK,QAAQQ,OAEjCb,EAAKC,QAAQe,QAEoC,IAA5C,IAAIC,EAAW,EAAGA,GAAYN,EAAQM,GAAY,EACrDC,EAAcD,EAAUH,GACrBK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,EAAAzB,GAAS0B,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,EAAAzB,GAAS0B,OAAOI,QACd,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAGjDR,GAASC,C,IAIb,IAAMG,EAAgB,SAACG,EAAUC,GAC/B,IAAMO,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEZ,WAAUC,UAEpBY,EAAO,CAAEb,WAAUC,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEll: document.querySelector('.form'),\n  delayEll: document.querySelector(`[name=\"delay\" ]`),\n  stepEll: document.querySelector(`[name=\"step\"]`),\n  amountEll: document.querySelector(`[name=\"amount\"]`),\n  btnEll: document.querySelector(`[type=\"submit\"]`),\n};\n\nrefs.formEll.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const amount = Number(refs.amountEll.value);\n  let delay = Number(refs.delayEll.value);\n  const step = Number(refs.stepEll.value);\n\n  refs.formEll.reset();\n  // перебираємо проміс і на кожній ітерації створюємо проміс\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n});\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEll","document","querySelector","delayEll","stepEll","amountEll","btnEll","addEventListener","e","preventDefault","amount","Number","value","delay1","step","reset","position1","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay","$parcel$interopDefault","Notify","success","concat","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.faddbd01.js.map"}